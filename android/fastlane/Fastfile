default_platform(:android)

lane :updateAndroidBuildVersionAndNumber do
  package = load_json(json_path: "package.json")
  increment_version_code(gradle_file_path: 'android/app/build.gradle', version_code: package["build"])
  increment_version_name(gradle_file_path: 'android/app/build.gradle', version_name: package["version"])
end

lane :buildAndUploadAndroid do
  store_password = ENV['STORE_PASSWORD']
  key_password = ENV['KEY_PASSWORD']
  releaseFilePath = File.join(Dir.pwd, "..", "/secret-key/secret.keystore")

  build_number = android_get_version_code()
  version = android_get_version_name()

  gradle(task: 'clean')
  gradle(
    task: 'bundle',
    build_type: 'Release',
    print_command: false,
    properties: {
      "android.injected.signing.store.file" => releaseFilePath,
      "android.injected.signing.store.password" => store_password,
      "android.injected.signing.key.alias" => ENV['MY_KEY_ALIAS'],
      "android.injected.signing.key.password" => key_password,
    }
  )

  upload_to_play_store(
    track: 'internal',
    track_promote_to: 'alpha'
  )

  jsbundle = "/Users/prv/Desktop/Pet/android/app/build/generated/assets/createBundleReleaseJsAndAssets/index.android.bundle"
  jsmap = "/Users/prv/Desktop/Pet/android/app/build/generated/sourcemaps/react/release/index.android.bundle.map"

  sentry_upload_sourcemap(
    auth_token: ENV['SENTRY_AUTH_TOKEN'],
    org_slug: ENV['SENTRY_ORG'],
    project_slug: ENV['SENTRY_PROJECT'],
    app_identifier: 'com.topetornot',
    version: version,
    dist: build_number,
    sourcemap: [jsbundle, jsmap],
  )

  mapping = "/Users/prv/Desktop/Pet/android/app/build/outputs/mapping/release/mapping.txt"
  merged_manifest = "/Users/prv/Desktop/Pet/android/app/build/intermediates/bundle_manifest/release/AndroidManifest.xml"

  sentry_upload_proguard(
    auth_token: ENV['SENTRY_AUTH_TOKEN'],
    org_slug: ENV['SENTRY_ORG'],
    project_slug: ENV['SENTRY_PROJECT'],
    mapping_path: mapping,
    android_manifest_path: merged_manifest
  )
end

