
default_platform(:ios)

# IMPORTANT
# this lane is used from client-app directory
# so all paths are relative to /client-app
lane :updateIOSBuildVersionAndNumber do
  package = load_json(json_path: "package.json")
  increment_build_number(xcodeproj: "ios/ToPetOrNot.xcodeproj", build_number: package["build"])
  increment_version_number(xcodeproj: "ios/ToPetOrNot.xcodeproj", version_number: package["version"])
end

lane :buildAndUploadIOS do
  match(type: 'appstore', readonly: true)
  
  gym(scheme: "ToPetOrNot", configuration: "Release")

  upload_to_testflight(username: ENV['FASTLANE_USER'], skip_waiting_for_build_processing: true)    

  version = get_version_number(xcodeproj: "ToPetOrNot.xcodeproj")
  build_number = get_build_number(xcodeproj: "ToPetOrNot.xcodeproj")
  jsbundle = '/Users/prv/Library/Developer/Xcode/DerivedData/ToPetOrNot-gblkffjsvbdaygeeuokjnnphjhpk/Build/Products/Release-iphonesimulator/ToPetOrNot.app/main.jsbundle'

  sentry_upload_sourcemap(
    auth_token: ENV['SENTRY_AUTH_TOKEN'],
    org_slug: ENV['SENTRY_ORG'],
    project_slug: ENV['SENTRY_PROJECT'],
    app_identifier: 'com.topetornot',
    version: version,
    dist: build_number,
    sourcemap: [jsbundle, '../ios.jsbundle.map'],
  )

  sentry_upload_dsym(
    auth_token: ENV['SENTRY_AUTH_TOKEN'],
    org_slug: ENV['SENTRY_ORG'],
    project_slug: ENV['SENTRY_PROJECT'],
    dsym_path: 'ios/ToPetOrNot.app.dSYM.zip',
  )

  exec("rm -f ../ios.jsbundle.map \
        rm -f ../ToPetOrNot.ipa \
        rm -f ../ToPetOrNot.app.dSYM.zip \
        rm -f \"#@jsbundle\"")
end

